/*
#NAME: Mike Sadowski
#DATE: September 21st, 2014
#STUDENT ID: 0864810
#ASSIGNEMNT: Data Structures Assignment 1
*/

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

double newtonRecursion(long x, double e, double a);
double newtonLoop(long x, double e, double a);

void newtonMain (void)
{	
	long x = 0;
	double e = 0.0;
	double a = 0;
	
	printf("Please enter a number to calculate it's square root: ");
	scanf("%lu", &x);

	printf("Please enter the accuracy: ");
	scanf("%lf", &e);
	
	a = x/2;/*initial approximation for recursion function call*/
	a = newtonRecursion(x,e,a);
	printf("\nRecursion Method:\nSquare root of %lu with accuracy of %e is %e\n",x,e,a);

	a = x/2;/*initial approximation for loop function call*/
	a = newtonLoop(x,e,a);
	printf("\nLoop Method:\nSquare root of %lu with accuracy of %e is %e\n",x,e,a);
}

/*square roots a number x with newtons method to the accuracy of e, but using a loop instead of recursion*/
double newtonLoop(long x, double e, double a)
{
	do
	{
		a = (a + (x/a)) / 2;/*calculate a with newtons formula*/
	}while(abs(a * a - x) > e);/*want condition to keep on looping instead of stopping or exiting, so reverse less than*/

	return a;


}

/*square roots a number x with newtons method to the accuracy of e, but using recursion instead of a loop*/
double newtonRecursion(long x, double e, double a)
{
	if(abs(a * a - x) <= e)/*check exit condition, if it's met, exit*/
	{
		return a;
	}
	else
	{
		a = (a + (x/a)) / 2;/*calculate a with newtons formula*/
		return newtonRecursion(x,e,a);/*call function again with new a value*/
	}
}

